<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <sub-flow name="dataWeaveMaskingSub_Flow">
        <dw:transform-message doc:name="xmlDataMasking" metadata:id="392b6158-0b6b-4ae2-b566-73ca74bf852e">
            <dw:input-payload doc:sample="sample_data\string.dwl"/>
            <dw:set-variable variableName="logginVariable"><![CDATA[%dw 1.0
%output application/xml

%var keyToEncrypt = ['ssn','creditCardNumber']

%function encrypt(val) "*****"

%function needsEncrypt(key) (sizeOf (keyToEncrypt find key)) > 0

%function maskSensitiveData(value) value mapObject ({
	($$) : maskSensitiveData($) when $ is :object otherwise $
	}   unless needsEncrypt($$ as :string) otherwise {
	($$) : encrypt($)
	}
)
---

maskSensitiveData(payload)]]></dw:set-variable>
        </dw:transform-message>
    </sub-flow>
</mule>
